plugins {
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

version = "${mc_part}-${major}.${minor}.${patch}"
group = "eutros.framedcompactdrawers"
archivesBaseName = "${mod_id}"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'parchment', version: "2022.11.27-1.19.2"
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            property 'forge.logging.console.level', 'debug'
            workingDirectory project.file('run')
            mods {
                framedcompactdrawers {
                    source sourceSets.main
                }
            }
        }
        server {
            property 'forge.logging.console.level', 'debug'
            workingDirectory project.file('run')
            mods {
                framedcompactdrawers {
                    source sourceSets.main
                }
            }
        }
        data {
            property 'forge.logging.console.level', 'debug'
            workingDirectory project.file('run')
            mods {
                framedcompactdrawers {
                    source sourceSets.main
                }
            }
            args '--mod', 'framedcompactdrawers',
                    '--all',
                    '--existing-mod', 'storagedrawers',
                    '--output', file('src/generated/resources/')
        }
    }
}

repositories {
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"
    implementation fg.deobf("curse.maven:StorageDrawers-223852:${storagedrawers_version}")
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
    options.compilerArgs.add("-Xlint:deprecation")
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "${mod_id}",
                "Specification-Vendor"    : "Eutro",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${project.version}",
        ])
    }
}

jar.finalizedBy('reobfJar')
